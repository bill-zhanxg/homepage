@import url('https://fonts.googleapis.com/css2?family=Sen&display=swap') layer(base);

@import 'tailwindcss';
@plugin "daisyui";

@plugin "daisyui/theme" {
	name: 'dark';
	default: true;
	prefersdark: true;
	color-scheme: 'dark';
	--color-base-100: oklch(25.33% 0.016 252.42);
	--color-base-200: oklch(23.26% 0.014 253.1);
	--color-base-300: oklch(21.15% 0.012 254.09);
	--color-base-content: oklch(97.807% 0.029 256.847);
	--color-primary: oklch(55% 0.288 302.321);
	--color-primary-content: oklch(96% 0.018 272.314);
	--color-secondary: oklch(71% 0.202 349.761);
	--color-secondary-content: oklch(94% 0.028 342.258);
	--color-accent: oklch(86% 0.127 207.078);
	--color-accent-content: oklch(38% 0.063 188.416);
	--color-neutral: oklch(14% 0.005 285.823);
	--color-neutral-content: oklch(92% 0.004 286.32);
	--color-info: oklch(74% 0.16 232.661);
	--color-info-content: oklch(29% 0.066 243.157);
	--color-success: oklch(76% 0.177 163.223);
	--color-success-content: oklch(37% 0.077 168.94);
	--color-warning: oklch(82% 0.189 84.429);
	--color-warning-content: oklch(41% 0.112 45.904);
	--color-error: oklch(71% 0.194 13.428);
	--color-error-content: oklch(27% 0.105 12.094);
	--radius-selector: 0.5rem;
	--radius-field: 0.5rem;
	--radius-box: 1rem;
	--size-selector: 0.25rem;
	--size-field: 0.25rem;
	--border: 1px;
	--depth: 1;
	--noise: 0;
}

/*
	The default border color has changed to `currentColor` in Tailwind CSS v4,
	so we've added these compatibility styles to make sure everything still
	looks the same as it did with Tailwind CSS v3.

	If we ever want to remove these styles, we need to add an explicit border
	color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}

	:root {
		--card-p: 1rem;
	}

	html,
	body {
		@apply h-full w-full;
	}
}

@utility card-grid-template {
	grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr));
}

@utility menu {
	& :where(li:not(.disabled)) > :where(*:not(ul)) {
		@apply active:bg-primary;
		transition-property: inherit;
		transition-duration: inherit;
		transition-timing-function: inherit;
	}
}

@utility spinner {
	&::before {
		animation: 1.5s cubic-bezier(0.4, 0.7, 0.9, 0.3) infinite spinner;
		animation-play-state: inherit;
		border: solid 4px #cfd0d1;
		border-bottom-color: hsl(var(--p));
		border-radius: 50%;
		content: '';
		height: 30px;
		width: 30px;
		position: absolute;
	}
}

@utility -translate-x-new-half {
	translate: -50%;
}

@utility btn {
	@apply rounded-lg;
}

@layer base {
	body {
		@apply font-[Sen] text-[#DCDFE4];
	}

	::-webkit-scrollbar {
		@apply w-4;
	}

	::-webkit-scrollbar-track,
	::-webkit-scrollbar-corner {
		@apply bg-base-300;
	}

	::-webkit-scrollbar-thumb {
		@apply rounded-full border-2 border-slate-700 bg-slate-700;
	}

	::-webkit-scrollbar-thumb:hover {
		@apply border-solid bg-primary;
	}

	::-webkit-scrollbar-button:single-button {
		@apply block h-4 w-4 border-solid border-base-300;
	}

	::-webkit-scrollbar-button:vertical:decrement {
		border-width: 0 8px 8px 8px;
		border-color: transparent transparent #bbbbbb transparent;
	}

	::-webkit-scrollbar-button:vertical:decrement:hover {
		border-color: transparent transparent #ffffff transparent;
	}

	::-webkit-scrollbar-button:vertical:increment {
		border-width: 8px 8px 0 8px;
		border-color: #bbbbbb transparent transparent transparent;
	}

	::-webkit-scrollbar-button:vertical:increment:hover {
		border-color: #ffffff transparent transparent transparent;
	}

	::-webkit-scrollbar-button:horizontal:decrement {
		border-width: 8px 8px 8px 0;
		border-color: transparent #bbbbbb transparent transparent;
	}

	::-webkit-scrollbar-button:horizontal:decrement:hover {
		border-color: transparent #ffffff transparent transparent;
	}

	::-webkit-scrollbar-button:horizontal:increment {
		border-width: 8px 0 8px 8px;
		border-color: transparent transparent transparent #bbbbbb;
	}

	::-webkit-scrollbar-button:horizontal:increment:hover {
		border-color: transparent transparent transparent #ffffff;
	}
}

@layer components {
	@keyframes spinner {
		0% {
			transform: translate(-50%, -50%) rotate(0deg);
		}
		100% {
			transform: translate(-50%, -50%) rotate(360deg);
		}
	}
}
